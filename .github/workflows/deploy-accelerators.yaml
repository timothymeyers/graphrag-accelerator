name: Deploy Accelerator

# az ad sp create-for-rbac --name "my-github-action-sp" --role contributor --scopes /subscriptions/4a3b6480-8f2b-41b2-9123-46de70d10895

on:
  push:
  workflow_dispatch:

jobs:

  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [Commercial]
        location: [eastus2]
    environment: ${{ matrix.environment }}
    env:
      RESOURCE_GROUP: rg-gr-${{ matrix.environment }}-${{ github.run_number }}
      LOCATION: ${{ matrix.location }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create resource group and assign RBAC
        run: |
          rgId=$(az group create --name ${{ env.RESOURCE_GROUP }} --location ${{ env.LOCATION }} --query id -o tsv)
          appId=$(az ad sp list --display-name github-action-sp --query [].appId -o tsv)

          az role assignment create --role "Owner" --assignee $appId --scope $rgId

      - name: Replace environment variable tokens
        env:
          TIM: "Tim"
          #RESOURCE_GROUP: rg-gr-${{ matrix.environment }}-${{ github.run_number }}
          #LOCATION: ${{ matrix.location }}
        run: |
          cd infra

          cat <<EOF > ci.parameters.json
          {
            "LOCATION": "${{ matrix.location }}",
            "RESOURCE_GROUP": "${{ env.RESOURCE_GROUP }}",
            "GRAPHRAG_API_BASE": "${{ secrets.GRAPHRAG_API_BASE }}",
            "GRAPHRAG_API_VERSION": "${{ secrets.GRAPHRAG_API_VERSION }}",
            "GRAPHRAG_EMBEDDING_DEPLOYMENT_NAME": "${{ secrets.GRAPHRAG_EMBEDDING_DEPLOYMENT_NAME }}",
            "GRAPHRAG_EMBEDDING_MODEL": "${{ secrets.GRAPHRAG_EMBEDDING_MODEL }}",
            "GRAPHRAG_LLM_DEPLOYMENT_NAME": "${{ secrets.GRAPHRAG_LLM_DEPLOYMENT_NAME }}",
            "GRAPHRAG_LLM_MODEL": "${{ secrets.GRAPHRAG_LLM_MODEL }}"
          }
          EOF
          cat ci.parameters.json

      - name: Deploy Accelerators
        run: |
          cd infra
          ./deploy.sh -g -p ci.parameters.json

      - name: Clean up
        if: always()
        run: |
          echo Hi
          #az group delete --name ${{ env.RESOURCE_GROUP }} --yes --no-wait
